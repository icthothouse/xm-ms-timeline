CREATE TABLE IF NOT EXISTS entity_key_to_id (
    entity_id bigint,
    entity_key text,
    PRIMARY KEY (entity_key)
);
CREATE MATERIALIZED VIEW IF NOT EXISTS entity_id_to_key AS
    SELECT * FROM entity_key_to_id
    WHERE entity_id IS NOT NULL AND entity_key IS NOT NULL
    PRIMARY KEY (entity_id, entity_key);
CREATE TABLE IF NOT EXISTS timeline_by_entity_and_date (
    entity_id bigint,
    start_date timestamp,
    rid text,
    login text,
    user_key text,
    tenant text,
    ms_name text,
    operation text,
    entity_key text,
    entity_type_key text,
    operation_url text,
    http_method text,
    request_body text,
    request_length bigint,
    response_body text,
    response_length bigint,
    request_headers map<text,text>,
    response_headers map<text,text>,
    http_status_code int,
    channel_type text,
    exec_time bigint,
    PRIMARY KEY (entity_id, start_date, rid)
) WITH CLUSTERING ORDER BY (start_date DESC);
CREATE TABLE IF NOT EXISTS timeline_by_entity_and_operation_and_date (
    entity_id bigint,
    operation text,
    start_date timestamp,
    rid text,
    login text,
    user_key text,
    tenant text,
    ms_name text,
    entity_key text,
    entity_type_key text,
    operation_url text,
    http_method text,
    request_body text,
    request_length bigint,
    response_body text,
    response_length bigint,
    request_headers map<text,text>,
    response_headers map<text,text>,
    http_status_code int,
    channel_type text,
    exec_time bigint,
    PRIMARY KEY (entity_id, operation, start_date, rid)
) WITH CLUSTERING ORDER BY (operation DESC, start_date DESC);
CREATE TABLE IF NOT EXISTS timeline_by_user_and_date (
    login text,
    user_key text,
    start_date timestamp,
    rid text,
    tenant text,
    ms_name text,
    operation text,
    entity_id bigint,
    entity_key text,
    entity_type_key text,
    operation_url text,
    http_method text,
    request_body text,
    request_length bigint,
    response_body text,
    response_length bigint,
    request_headers map<text,text>,
    response_headers map<text,text>,
    http_status_code int,
    channel_type text,
    exec_time bigint,
    PRIMARY KEY (user_key, start_date, rid)
) WITH CLUSTERING ORDER BY (start_date DESC);
CREATE TABLE IF NOT EXISTS timeline_by_user_and_operation_and_date (
    login text,
    user_key text,
    operation text,
    start_date timestamp,
    rid text,
    tenant text,
    ms_name text,
    entity_id bigint,
    entity_key text,
    entity_type_key text,
    operation_url text,
    http_method text,
    request_body text,
    request_length bigint,
    response_body text,
    response_length bigint,
    request_headers map<text,text>,
    response_headers map<text,text>,
    http_status_code int,
    channel_type text,
    exec_time bigint,
    PRIMARY KEY (user_key, operation, start_date, rid)
) WITH CLUSTERING ORDER BY (operation DESC, start_date DESC);
